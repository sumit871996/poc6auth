pipeline{
     agent none
     environment{   
 
    DOCKERHUB_CREDENTIALS= credentials('dockerhub_id')
    GITHUB_CREDENTIALS= credentials('github_id')
    REVISION = 19
    DOTNET_PATH = "/root/.dotnet/tools"
    HARBOR_CREDENTIALS = credentials('harbor_id') 

    
} 
     stages{
         stage('Checkout') {
         agent{
     label 'pocauth'
     }
          steps{ 
          git branch: 'main', url: 'https://github.com/sumit871996/poc6auth.git'
               }
          }
      
          stage('Docker build'){
          agent{
     label 'pocauth'
     }
          steps{
               sh "docker image build -t sumithpe/poc6auth ./JWTAuth_Validation/."
               }  
          }
          
          
          stage('Docker push'){
          agent{
     label 'pocauth'
     }
          steps{
               sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                        sh "docker image push sumithpe/poc6auth:latest"
               
          }
          }   
          stage('docker stop container') {
        agent {
     label 'pocauth'
     }
         steps {
        
            sh "docker ps -f name=poc6authcon  -q | xargs --no-run-if-empty docker container stop"
            sh "docker container ls -a -fname=poc6authcon -q | xargs -r docker container rm"
            
         }
       }

      stage('Docker Run') {
       agent {
     label 'pocauth'
     }
        steps {
          
                sh "sudo docker container run -d -p 49356:80 --rm --name poc6authcon sumithpe/poc6auth"
                
            }
        }

stage('Building'){
    agent{
     label 'sonarQube_node'
     }
            steps{
                   sh'''
                   export PATH=$DOTNET_PATH:$PATH
                   cd JWTAuth_Validation/
                   sudo dotnet sonarscanner begin /k:"pocauth" /d:sonar.host.url="http://35.225.86.148:9000" /d:sonar.login="sqp_f6228200fef13a91ad6048ea823e3399de57bdf5"
                   sudo dotnet build
                   '''
            }
         }
        stage('SonarQube analysis') {
        agent {
     label 'sonarQube_node'
     }
//    def scannerHome = tool 'SonarScanner 4.0';
        steps{
         
        // If you have configured more than one global server connection, you can specify its name
//      sh "${scannerHome}/bin/sonar-scanner"
script {
        sh'''
        cd /home/sumit_bharat_mandlik/remotejenkins/workspace/employeeregistration_auth/JWTAuth_Validation/
        sudo dotnet sonarscanner end /d:sonar.login='sqp_f6228200fef13a91ad6048ea823e3399de57bdf5'
        '''
        }
    
        }
        }

           stage('Push to harbor'){
          agent{
        label 'harbor_node'
    }
            steps{
            sh "docker image prune -af"
                sh "docker image pull sumithpe/poc6auth"
                  sh "docker image tag sumithpe/poc6auth 20.21.104.152/employeerreqistartion/poc6auth"
                sh 'echo $HARBOR_CREDENTIALS_PSW | docker login 20.21.104.152 -u $HARBOR_CREDENTIALS_USR --password-stdin'  
                sh "docker image push 20.21.104.152/employeerreqistartion/poc6auth"
            }
        }

  
          
     }
}
